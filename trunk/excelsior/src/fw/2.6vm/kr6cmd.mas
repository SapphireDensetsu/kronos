:LI0=0200
        [ bus_A=Etop->STACK CONST->Etop D=00 FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=01 FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=02 FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=03 FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=04 FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=05 FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=06 FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=07 FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=08 FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=09 FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=0A FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=0B FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=0C FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=0D FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=0E FINISH ][F]
        [ bus_A=Etop->STACK CONST->Etop D=0F FINISH ][F]
:LIB    [ UPDATE_CASH ]
        [ bus_A=Etop->STACK bus_B=WR_Etop INC_PC GOTO ADR=NOP ]
:LID    [ UPDATE_CASH ]
        [ bus_A=Etop->STACK bus_B=WR_Etop INC_PC GOTO ADR=LID_1 ]
:LIW    [ bus_A=Etop->STACK CALL ADR=NEXT4 ]
        [ ALU=A bus_A=R2 bus_B=WR_Etop FLAG=ZERO FINISH ]
:LIN    [ bus_A=Etop->STACK ALU=ROR(NE(B)) CONST->Etop D=0FF FINISH ][F]
:LLA    [ bus_A=Etop->STACK UPDATE_CASH ]
        [ ALU=A+B bus_A=L bus_B=WR_Etop INC_PC GOTO ADR=NOP ]
:LGA    [ bus_A=Etop->STACK UPDATE_CASH ]
        [ ALU=A+B bus_A=G bus_B=WR_Etop INC_PC GOTO ADR=NOP ]
:LSA    [ UPDATE_CASH ]
        [ ALU=A+B bus_A=Etop bus_B=WR_Etop INC_PC GOTO ADR=NOP ]
:LEA    [ bus_A=Etop->STACK UPDATE_CASH ]
        [ ALU=A-B-1 bus_A=G INC_PC bus_B=WR_R1 GOTO ADR=LEA_1 ]
:JFLC   [ UPDATE_CASH ]
        [ ALU=A bus_A=Etop FLAG=Z GOTO ADR=JFLC_1 ]
:JFL    [ UPDATE_CASH ]
        [ GOTO ADR=JFL_1 ]
:JFSC   [ UPDATE_CASH ]
        [ ALU=A bus_A=Etop FLAG=Z GOTO ADR=JFSC_1 ]
:JFS    [ UPDATE_CASH ]
        [ GOTO ADR=JUMP bus_B=WR_R1 INC_PC ]
:JBLC   [ UPDATE_CASH ]
        [ ALU=A bus_A=Etop FLAG=Z GOTO ADR=JBLC_1 ]
:JBL    [ UPDATE_CASH ]
        [ GOTO ADR=JBL_1 ]
:JBSC   [ UPDATE_CASH ]
        [ ALU=A bus_A=Etop FLAG=Z GOTO ADR=JBSC_1 ]
:JBS    [ UPDATE_CASH ]
        [ GOTO ADR=JUMP ALU=NEG(B) bus_B=WR_R1 INC_PC ]
:LLW    [ bus_A=Etop->STACK UPDATE_CASH ]
        [ ALU=A+B bus_A=L INC_PC bus_B=WR_R1 GOTO ADR=LLW_1 ]
:LGW    [ bus_A=Etop->STACK UPDATE_CASH ]
        [ ALU=A+B bus_A=G INC_PC bus_B=WR_R1 GOTO ADR=LLW_1 ]
:LEW    [ bus_A=Etop->STACK UPDATE_CASH ]
        [ ALU=A-B-1 bus_A=G INC_PC bus_B=WR_R1 GOTO ADR=LEW_1 ]
:LSW    [ UPDATE_CASH ALU=A bus_A=Etop bus_B=WR_R6 ]
        [ ALU=A+B bus_A=Etop INC_PC bus_B=WR_R1 GOTO ADR=LSW_1 ]
:LLW4   [ ALU=A+B bus_A=L CONST->R1 D=4  ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=5  ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=6  ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=7  ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=8  ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=9  ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=0A ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=0B ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=0C ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=0D ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=0E ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=0F ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
:SLW    [ ALU=A bus_A=Etop bus_B=WR_R4 UPDATE_CASH ]
        [ ALU=A+B bus_A=L INC_PC bus_B=WR_R1 GOTO ADR=SLW_1 ]
:SGW    [ ALU=A bus_A=Etop bus_B=WR_R4 UPDATE_CASH ]
        [ ALU=A+B bus_A=G INC_PC bus_B=WR_R1 GOTO ADR=SLW_1 ]
:SEW    [ ALU=A bus_A=Etop bus_B=WR_R4 UPDATE_CASH ]
        [ ALU=A-B-1 bus_A=G INC_PC bus_B=WR_R1 GOTO ADR=SEW_1 ]
:SSW    [ ALU=A bus_A=Etop bus_B=WR_R4 UPDATE_CASH ]
        [ bus_A=STACK->R6 GOTO ADR=SSW_1 ]
:SLW4   [ ALU=A+B bus_A=L CONST->R1 D=04 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=05 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=06 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=07 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=08 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=09 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=0A ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=0B ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=0C ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=0D ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=0E ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=L CONST->R1 D=0F ][ GOTO ADR=SLW4_1 ]
:LXB    [ ALU=A_AND_B bus_A=Etop CONST->R4 D=3 FLAG=Z ]
        [ ALU=ASR(A) bus_A=RW_Etop GOTO ADR=LXB_1 ]
:LXW    [ ALU=A+B bus_A=STACK->R1 bus_B=Etop CALL ADR=READ ]
        [ ALU=A bus_A=R2 bus_B=WR_Etop GOTO ADR=LXW_1 ]
:LGW2   [ ALU=A+B bus_A=G CONST->R1 D=02 ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=03 ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=04 ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=05 ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=06 ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=07 ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=08 ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=09 ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=0A ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=0B ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=0C ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=0D ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=0E ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=0F ][ bus_A=Etop->STACK GOTO ADR=LLW4_1 ]
:SXB    [ ALU=A_AND_B bus_A=RW_Etop CONST->R4 D=0FF ]
        [ GOTO ADR=SXB_1 ]
:SXW    [ bus_A=STACK->R1 ]
        [ ALU=A+B bus_A=STACK->R1 bus_B=R1 GOTO ADR=SXW_1 ]
:SGW2   [ ALU=A+B bus_A=G CONST->R1 D=02 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=03 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=04 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=05 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=06 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=07 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=08 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=09 ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=0A ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=0B ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=0C ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=0D ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=0E ][ GOTO ADR=SLW4_1 ]
        [ ALU=A+B bus_A=G CONST->R1 D=0F ][ GOTO ADR=SLW4_1 ]
:LSW0   [ ALU=A+B bus_A=Etop CONST->R1 D=00 ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=01 ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=02 ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=03 ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=04 ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=05 ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=06 ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=07 ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=08 ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=09 ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=0A ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=0B ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=0C ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=0D ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=0E ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
        [ ALU=A+B bus_A=Etop CONST->R1 D=0F ]
        [ ALU=A bus_A=Etop bus_B=WR_R4 GOTO ADR=LSW0_1 ]
:SSW0   [ bus_A=STACK->R5 CONST->R1 D=00 ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=01 ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=02 ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=03 ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=04 ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=05 ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=06 ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=07 ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=08 ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=09 ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=0A ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=0B ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=0C ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=0D ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=0E ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
        [ bus_A=STACK->R5 CONST->R1 D=0F ]
        [ ALU=A+B bus_A=RW_R1 bus_B=R5 GOTO ADR=SSW0_1 ]
:RESET  [ CALL ADR=RESET_SUB ][ FLAG=ZERO FINISH ]
:QUIT   [ CONST->R6 D=0 ]
        [ GOTO ADR=HALTED ]
:GETM   [ bus_A=Etop->STACK ]
        [ ALU=A bus_A=M bus_B=WR_Etop FINISH ]
:SETM   [ ALU=ROR(B) CONST->R6 D=1 ]
        [ ALU=ROR(A) bus_A=RW_R6 GOTO ADR=SETM_1 ]
:TRAP   [ ALU=A bus_A=Etop bus_B=WR_R4 ]
        [ bus_A=STACK->Etop GOTO ADR=USR_TRAP ]
:TRA    [ GOTO ADR=TRA_1 ][F]
:TR     [ GOTO ADR=TR_1 ][F]
:IDLE   [ GOTO ADR=IDLE_1 ][F]
:ADD    [ ALU=A+B bus_A=STACK->Etop bus_B=Etop FLAG=OVR FINISH ][F]
:SUB    [ ALU=A-B bus_A=STACK->Etop bus_B=Etop FLAG=OVR FINISH ][F]
:MUL    [ bus_A=STACK->R1 CALL ADR=IMUL ] [ FINISH ]
:DIV    [ bus_A=STACK->R1 CALL ADR=IDIV ] [ FINISH ]
:SHL    [ ALU=A bus_A=Etop bus_B=WR_R1 FLAG=Z ]
        [ bus_A=STACK->Etop GOTO ADR=SHL_1 ]
:SHR    [ ALU=A bus_A=Etop bus_B=WR_R1 FLAG=Z ]
        [ bus_A=STACK->Etop GOTO ADR=SHR_1 ]
:ROL    [ ALU=A bus_A=Etop LOAD_CNT ]
        [ bus_A=STACK->Etop GOTO ADR=ROL_1 ]
:ROR    [ ALU=B-A bus_A=Etop CONST D=20 LOAD_CNT ]
        [ bus_A=STACK->Etop GOTO ADR=ROL_1 ]
:INP    [ GOTO ADR=INP_1 ][F]
:OUT    [ GOTO ADR=OUT_1 ][F]
:RES92  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:RES93  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:RES94  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:RES95  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:RES96  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:RES97  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:FADD   [ CALL ADR=FADD_SUB ] [ FLAG=ZERO FINISH ]
:FSUB   [ CALL ADR=FSUB_SUB ] [ FLAG=ZERO FINISH ]
:FMUL   [ CALL ADR=FMUL_SUB ] [ FLAG=ZERO FINISH ]
:FDIV   [ CALL ADR=FDIV_SUB ] [ FLAG=ZERO FINISH ]
:FCMP   [ bus_A=STACK->R1 GOTO ADR=FCMP_SUB ] [F]
:FABS   [ CALL ADR=FABS_SUB ] [ FLAG=ZERO FINISH ]
:FNEG   [ CALL ADR=FNEG_SUB ] [ FLAG=ZERO FINISH ]
:FFCT   [ CALL ADR=FFCT_SUB ] [ FLAG=ZERO FINISH ]
:LSS    [ ALU=A-B bus_A=STACK->Etop bus_B=Etop FLAG=N_XOR_OVR ]
        [ ALU=B+NE_FLAG CONST->Etop D=0 FLAG=ZERO FINISH ]
:LEQ    [ ALU=A-B bus_A=STACK->Etop bus_B=Etop FLAG=N_XOR_OVR+Z ]
        [ ALU=B+FLAG    CONST->Etop D=0 FLAG=ZERO FINISH ]
:GTR    [ ALU=A-B bus_A=STACK->Etop bus_B=Etop FLAG=N_XOR_OVR+Z ]
        [ ALU=B+NE_FLAG CONST->Etop D=0 FLAG=ZERO FINISH ]
:GEQ    [ ALU=A-B bus_A=STACK->Etop bus_B=Etop FLAG=N_XOR_OVR ]
        [ ALU=B+FLAG    CONST->Etop D=0 FLAG=ZERO FINISH ]
:EQU    [ ALU=A-B bus_A=STACK->Etop bus_B=Etop FLAG=Z ]
        [ ALU=B+FLAG    CONST->Etop D=0 FLAG=ZERO FINISH ]
:NEQ    [ ALU=A-B bus_A=STACK->Etop bus_B=Etop FLAG=Z ]
        [ ALU=B+NE_FLAG CONST->Etop D=0 FLAG=ZERO FINISH ]
:ABS    [ ALU=A+B bus_A=Etop bus_B=Etop FLAG=CARRY GOTO ADR=ABS_1 ][F]
:NEG    [ ALU=NEG(A) bus_A=RW_Etop FLAG=OVR FINISH ][F]
:OR     [ ALU=A_OR_B  bus_A=STACK->Etop bus_B=Etop FINISH ][F]
:AND    [ ALU=A_AND_B bus_A=STACK->Etop bus_B=Etop FINISH ][F]
:XOR    [ ALU=A_XOR_B bus_A=STACK->Etop bus_B=Etop FINISH ][F]
:BIC    [ ALU=A_BIC_B bus_A=STACK->Etop bus_B=Etop FINISH ][F]
:IN     [ ALU=A bus_A=Etop bus_B=WR_R4 ]
        [ bus_A=STACK->Etop GOTO ADR=IN_1 ]
:BIT    [ CALL ADR=BIT_S ][ GOTO ADR=BIT_1 ]
:NOT    [ ALU=A bus_A=Etop FLAG=Z ]
        [ ALU=B+FLAG bus_A=WR_Etop CONST D=0 FLAG=ZERO FINISH ]
:MOD    [ bus_A=STACK->R1 CALL ADR=IDIV ]
        [ ALU=A bus_A=R1 bus_B=WR_Etop FINISH ]
:DECS   [ ALU=NEG(A) bus_A=Etop bus_B=WR_R2 CALL ADR=CHECK_H ]
        [ ALU=A-B bus_A=RW_S bus_B=Etop GOTO ADR=DECS_1 ]
:DROP   [ bus_A=STACK->Etop FINISH ][F]
:LODFV  [ ALU=A bus_A=Etop bus_B=WR_R6 ][ bus_A=STACK->Etop GOTO ADR=LODFV_1 ]
:STORE  [ CONST->R2 D=0F ][ GOTO ADR=STORE_1 ]
:STOFV  [ CONST->R2 D=0F ][ GOTO ADR=STOFV_1 ]
:COPT   [ bus_A=Etop->STACK FINISH ][F]
:CPCOP  [ GOTO ADR=CPCOP_1 ][F]
:PCOP   [ GOTO ADR=PCOP_1 ][F]
:FOR1   [ CONST->R2 D=2 ] [ GOTO ADR=FOR1_1 ]
:FOR2   [ GOTO ADR=FOR2_1 ][F]
:ENTC   [ CONST->R2 D=1 ][ GOTO ADR=ENTC_1 ]
:XIT    [ GOTO ADR=XIT_1 ][F]
:ENTS   [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
        [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:ORJP   [ UPDATE_CASH ]
        [ ALU=A bus_A=Etop FLAG=Z GOTO ADR=ORJP_1 ]
:ANDJP  [ UPDATE_CASH ]
        [ ALU=A bus_A=Etop FLAG=Z GOTO ADR=ANDJP_1 ]
:MOVE   [ GOTO ADR=MOVE_1 ][F]
        [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:LSTA   [ GOTO ADR=LSTA_1 ][F]
:COMP   [ GOTO ADR=COMP_1 ][F]
:GB     [ UPDATE_CASH bus_A=Etop->STACK ]
        [ ALU=A bus_A=L bus_B=WR_Etop GOTO ADR=GB_1 ]
:GB1    [ GOTO ADR=GB1_1 ][F]
:CHK    [ ALU=A bus_A=Etop bus_B=WR_R1 ]
        [ bus_A=STACK->R2 GOTO ADR=CHK_1 ]
:CHKZ   [ ALU=A bus_A=Etop bus_B=WR_R1 ]
        [ ALU=A FLAG=N bus_A=STACK->Etop GOTO ADR=CHKZ_1 ]
:ALLOC  [ ALU=A bus_A=Etop bus_B=WR_R2 CALL ADR=CHECK_H ]
        [ ALU=A bus_A=Etop bus_B=WR_R2 GOTO ADR=ALLOC_1 ]
:ENTR   [ UPDATE_CASH ][ GOTO ADR=ENTR_1   ]
:RTN    [ GOTO ADR=RTN_1    ][F]
:NOP    [ FLAG=ZERO FINISH  ][F]
:CX     [ GOTO ADR=CX_1     ][F]
:CI     [ GOTO ADR=CI_1     ][F]
:CF     [ GOTO ADR=CF_1     ][F]
:CL     [ GOTO ADR=CL_1     ][F]
:CL00   [ CONST->R5 D=00 ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=01 ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=02 ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=03 ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=04 ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=05 ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=06 ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=07 ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=08 ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=09 ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=0A ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=0B ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=0C ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=0D ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=0E ][ GOTO ADR=MARK_LOC0 ]
        [ CONST->R5 D=0F ][ GOTO ADR=MARK_LOC0 ]
:INCL   [ GOTO ADR=INCL_1 ][F]
:EXCL   [ GOTO ADR=EXCL_1 ][F]
:SLEQ   [ ALU=A_BIC_B bus_A=STACK->Etop bus_B=Etop FLAG=Z ]
:SLEQ1  [ ALU=B+FLAG  CONST->Etop D=0 FLAG=ZERO FINISH ]
:SGEQ   [ bus_A=STACK->R1 ]
        [ ALU=A_BIC_B bus_A=Etop bus_B=R1 FLAG=Z GOTO ADR=SLEQ1 ]
:INC1   [ GOTO ADR=INC1_1 ][F]
:DEC1   [ GOTO ADR=DEC1_1 ][F]
:INC    [ GOTO ADR=INC_1 ][F]
:DEC    [ GOTO ADR=DEC_1 ][F]
:STOT   [ GOTO ADR=STOT_1 ][F]
:LODT   [ GOTO ADR=LODT_1 ][F]
:LXA    [ bus_A=STACK->R1 CALL ADR=IMUL ]
        [ ALU=A+B bus_A=STACK->Etop bus_B=Etop FINISH ]
:LPC    [ GOTO ADR=LPC_1 ][F]
:RESec  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:RESed  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:RESee  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:RESef  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:SWAP   [ ALU=A bus_A=Etop bus_B=WR_R1 ]
        [ bus_A=STACK->Etop GOTO ADR=SWAP_1 ]
:LPA    [ bus_A=Etop->STACK UPDATE_CASH ]
        [ ALU=A-B-1 bus_A=L bus_B=WR_Etop INC_PC GOTO ADR=NOP ]
:LPW    [ bus_A=Etop->STACK UPDATE_CASH ]
        [ ALU=A-B-1 bus_A=L INC_PC RD_MEM_A GOTO ADR=LLW_1 ]
:SPW    [ ALU=A bus_A=Etop bus_B=WR_R2 UPDATE_CASH ]
        [ ALU=A-B-1 bus_A=L INC_PC WR_MEM_A GOTO ADR=SLW_1 ]
:SSWU   [ bus_A=STACK->R1 ALU=A WR_MEM_A ]
        [ bus_B=Etop WR_MEM_D FINISH ]
:RESf5  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:RESf6  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:RESf7  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:RESf8  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:RESf9  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:ACTIV  [ bus_A=Etop->STACK ][ ALU=A bus_A=P bus_B=WR_Etop FINISH ]
:RESfb  [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:SYS    [ UPDATE_CASH ][ bus_B=WR_R1 INC_PC GOTO ADR=SYS_SWITCH ]
:NII    [ CONST->R4 D=7 ][ GOTO ADR=USR_TRAP ]
:DOT    [ GOTO ADR=DOT_1 ][F]
:INVLD  [ CONST->R4 D=49 ][ GOTO ADR=USR_TRAP ]
        [ ALU=A+1 bus_A=RW_PC RD_MEM_A DEC_CASH_PC ]
        [ WR_CASH RD_MEM_D ]
        [ FLAG=ZERO FINISH ]

