  PROCEDURE auto_scroll(VAR xsc,ysc: INTEGER);  BEGIN    WITH ctx^ DO      IF xsc<x-20 THEN        mod.scroll(v,-(ABS(xsc-x)/(w DIV SHIFT)+1)*32,0); xsc:=x      ELSIF xsc>(x+w+20) THEN        mod.scroll(v,+((xsc-x-w)/(w DIV SHIFT)+1)*32,0); xsc:=x+w-1      END;      IF    ysc<y-20 THEN        mod.scroll(v,0,-(ABS(ysc-y)/(h DIV SHIFT)+1)*32); ysc:=y      ELSIF ysc>(y+h+20) THEN        mod.scroll(v,0,+((ysc-y-h)/(h DIV SHIFT)+1)*32); ysc:=y+h-1      END    END  END auto_scroll;  PROCEDURE startlocator;  BEGIN    WITH ctx^ DO      lx:=crs.x-x; ly:=crs.y-y;      IF lx<0 THEN lx:=0 END; IF lx>=w THEN lx:=w-1 END;      IF ly<0 THEN ly:=0 END; IF ly>=h THEN ly:=h-1 END    END  END startlocator;  PROCEDURE readmouse(VAR keys: BITSET);    VAR mstate,change: BITSET; i,j: INTEGER;                   xscroll,yscroll: INTEGER;                             dx,dy: INTEGER;  BEGIN    WITH ctx^ DO      xscroll:=x+lx; yscroll:=y+ly; dx:=0; dy:=0;      LOOP        lx:=lx+dx; ly:=ly+dy; locator(ctx); dx:=0; dy:=0;        REPEAT          change:=mouse.state^.keys;          mouse.read(i,j,mstate);          dx:=dx+i; dy:=dy+j;          xscroll:=xscroll+i;          yscroll:=yscroll+j;          IF    lx+dx< 0 THEN dx:=-lx          ELSIF lx+dx>=w THEN dx:=w-1-lx          ELSE           xscroll:=lx+dx+x          END;          IF    ly+dy< 0 THEN dy:=-ly          ELSIF ly+dy>=h THEN dy:=h-1-ly          ELSE           yscroll:=ly+dy+y          END;          change:=change/mstate        UNTIL (mouse.ready()<=0)OR(change*mstate*{0,2}#{});        locator(ctx);        keys:=change*mstate;        IF keys#{} THEN EXIT END;        IF mode*{rol}#{} THEN auto_scroll(xscroll,yscroll) END      END    END  END readmouse;