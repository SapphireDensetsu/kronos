        [ CALL ADR=INIT_STACK ]
        [ CALL ADR=INIT0 ]

% Init E-stack
        [ CALL ADR=INIT_STACK ]
% Reset interupt requests.
:INIT4  [ CONST->M D=0            ]
        [ bus_B=M RESET_ACL       ]
        [ bus_B=M RESET_TIMER     ]
        [ bus_B=M RESET_DEBUG     ]
        [ bus_B=M RESET_HARD_ERR  ]
        [ CONST->P D=4 SHIFT_EN   ]
        [ CONST->F D=5 SHIFT_EN   ]
        [ ALU=A bus_A=F bus_B=WR_PC ]
        [ ALU=A RW_CASH_PC ]
        [ CONST D=0 WR_CASH ]
        [ ALU=A+B bus_A=P CONST->G D=10 WR_MEM_A ]
        [ bus_B=F WR_MEM_D ]
        [ ALU=A+B bus_A=P CONST->L D=20 ]
        [ ALU=A+B bus_A=P CONST->S D=24 ]
        [ ALU=A+B bus_A=P CONST->H D=0EF ]
        [ CALL ADR=SAVE_REGS ]
% Autorun
        [ bus_B=M QUIT_ON FLAG=Qbus ]
        [ GO_TRUE ADR=AUTR1 ]
        [ CONST->Etop D=20 SHIFT_EN ]
        [ bus_B=WR_R1 RD_CONSOL ]
        [ ALU=A_AND_B bus_A=Etop bus_B=R1 FLAG=Z ]
        [ GO_TRUE ADR=AUTR2 ]
        [ ALU=A_AND_B bus_A=R1 CONST D=0FF FLAG=Z ]
        [ GO_FALSE ADR=AUTR2 ]
        [ GOTO ADR=AUTORUN ]
:AUTR1  [ CONST->Etop D=7F SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=0B8 ]
        [ CALL ADR=GET_IO_ADR ]
        [ bus_B=R1 RD_MEM_A ]
        [ bus_B=WR_R1 RD_MEM_D ]
        [ ALU=A_AND_B bus_A=RW_R1 CONST D=80 FLAG=Z ]
        [ GO_TRUE ADR=AUTORUN ]

:AUTR2  [ CONST->R1 D=8 ]

:CONSOL
        [ CONST->Time D=0 ]
        [ bus_A=R1->STACK CALL ADR=CRLF ]
        [ CONST->R1 D=48 CALL_REG ]
        [ CONST->R1 D=41 CALL_REG ]
        [ CONST->R1 D=4C CALL_REG ]
        [ CONST->R1 D=54 CALL_REG ]
        [ CONST->R1 D=20 CALL_REG ]
        [ bus_A=STACK->R1 ]
        [ CONST->R2 D=2 ]
        [ CALL ADR=PUT_NUM ]
:CONSOL9[ ALU=A bus_A=P bus_B=WR_R3 ]
:CONSOL1[ CALL ADR=CRLF ]

:CONSOL_LOOP
% R3 - address, R4 - (R3), R5 - number, R6 - digits counter.
% Time - mode
        [ CONST->R1 D=20 CALL_REG ]
:MEM_CONSOL_CR
        [ ALU=B bus_A=WR_R5 CONST->R6 D=0 ]
        [ ALU=A bus_A=Time FLAG=Z ]
        [ GO_FALSE ADR=IO_CONSOL ]
        [ CONST->R2 D=0FF ]
        [ CALL ADR=ROR(R2,8) ]
        [ ALU=A_BIC_B bus_A=RW_R3 bus_B=R2 ]
        [ CONST->R2 D=6 ]
        [ ALU=A bus_A=R3 bus_B=WR_R1 CALL ADR=PUT_NUM ]
        [ bus_B=R3 RD_MEM_A ]
        [ bus_B=WR_R4 RD_MEM_D ]
        [ CONST->R1 D=3D CALL_REG ]
        [ CONST->R2 D=8 ]
        [ ALU=A bus_A=R4 bus_B=WR_R1 CALL ADR=PUT_NUM ]
        [ GOTO ADR=CONSOL4 ]

:IO_CONSOL
        [ CONST->R1 D=49 CALL_REG ]
        [ CONST->R1 D=4F CALL_REG ]
        [ CONST->R1 D=20 CALL_REG ]
        [ CONST->R2 D=070 SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_R3 bus_B=R2 ]
        [ ALU=ASL(A) bus_A=R3 bus_B=WR_R1 CALL ADR=PUT_NUM_OCT ]
        [ ALU=A bus_A=R3 bus_B=WR_Etop CALL ADR=GET_IO_ADR ]
        [ bus_B=R1 RD_MEM_A ]
        [ bus_B=WR_R4 RD_MEM_D ]
        [ CONST->R1 D=3D CALL_REG ]
        [ ALU=A bus_A=R4 bus_B=WR_R1 CALL ADR=PUT_NUM_OCT ]

:CONSOL4
        [ CONST->R1 D=20 CALL_REG ]
:CONSOL2[ CALL ADR=GET_CH ]
:CONSOL8[ ALU=A-B bus_A=R1 CONST D=0D FLAG=Z ]
        [ GO_TRUE ADR=CR_KEY ]
        [ ALU=A-B bus_A=R1 CONST D=0A FLAG=Z ]
        [ GO_TRUE ADR=LF_KEY ]
        [ ALU=A-B bus_A=R1 CONST D=2F FLAG=Z ]
        [ GO_TRUE ADR=SLASH_KEY ]
        [ ALU=A-B bus_A=R1 CONST D=4D FLAG=Z ]
        [ GO_TRUE ADR=MEM_KEY ]
        [ ALU=A-B bus_A=R1 CONST D=49 FLAG=Z ]
        [ GO_TRUE ADR=IO_KEY ]
        [ ALU=A-B bus_A=R1 CONST D=4C FLAG=Z ]
        [ GO_TRUE ADR=BOOTER ]
        [ ALU=A-B bus_A=R1 CONST D=57 FLAG=Z ]
        [ GO_TRUE ADR=BOOTER_MW ]
        [ ALU=A-B bus_A=R1 CONST D=30 FLAG=CARRY ]
        [ GO_FALSE ADR=CONSOL3 ]
        [ ALU=A-B bus_A=R1 CONST D=3A FLAG=CARRY ]
        [ GO_FALSE ADR=DIGIT_KEY ]
        [ ALU=A-B bus_A=R1 CONST D=41 FLAG=CARRY ]
        [ GO_FALSE ADR=CONSOL3 ]
        [ ALU=A-B bus_A=R1 CONST D=47 FLAG=CARRY ]
        [ GO_TRUE ADR=CONSOL3 ]
        [ ALU=A-B bus_A=RW_R1 CONST D=7 ]
        [ GOTO ADR=DIGIT_KEY ]
:CONSOL3[ ALU=A-B bus_A=R1 CONST D=47 FLAG=Z ]
        [ GO_TRUE ADR=GO_KEY ]
:INVALID_KEY
        [ CONST->R1 D=3F CALL_REG ]
        [ GOTO ADR=CONSOL1 ]

:WR_MEMORY
        [ ALU=A bus_A=R6 FLAG=Z ]
        [ RETURN_TRUE ]
        [ ALU=A bus_A=Time FLAG=Z ]
        [ GO_TRUE ADR=SET_MEM ]
        [ ALU=A bus_A=R3 bus_B=WR_Etop CALL ADR=GET_IO_ADR ]
        [ bus_B=R1 WR_MEM_A ]
        [ bus_B=R5 WR_MEM_D RETURN ]
:SET_MEM[ bus_B=R3 WR_MEM_A ]
        [ bus_B=R5 WR_MEM_D RETURN ]

:CR_KEY [ CALL ADR=WR_MEMORY ]
        [ ALU=A bus_A=R3 FLAG=Z ]
        [ GO_TRUE ADR=CR_KEY2 ]
        [ ALU=A-1 bus_A=RW_R3 ]
:CR_KEY2[ CONST->R1 D=0A CALL_REG ]
        [ CONST->R1 D=2D CALL_REG ]
        [ GOTO ADR=MEM_CONSOL_CR ]

:LF_KEY [ CALL ADR=WR_MEMORY ]
        [ ALU=A+1 bus_A=RW_R3 ]
        [ CONST->R1 D=0D CALL_REG ]
        [ GOTO ADR=CONSOL_LOOP ]

:SLASH_KEY
        [ ALU=A bus_A=Time FLAG=Z ]
        [ GO_FALSE ADR=SLASH_IO
          ALU=A bus_A=R6 FLAG=Z ]
        [ GO_TRUE ADR=SLASH1 ]
        [ ALU=A bus_A=R5 bus_B=WR_R4 ]
:SLASH1 [ ALU=A bus_A=R4 bus_B=WR_R3 CALL ADR=CRLF ]
        [ GOTO ADR=CONSOL1 ]
:SLASH_IO
        [ ALU=ROR(A_BIC_B) bus_A=R5 CONST->R3 D=1 ]
        [ CALL ADR=CRLF ]
        [ GOTO ADR=CONSOL1 ]

:DIGIT_KEY
        [ ALU=A-B bus_A=RW_R1 CONST D=30 ]
        [ ALU=A bus_A=Time FLAG=Z ]
        [ GO_FALSE ADR=DIGIT_IO ]
        [ ALU=A+1 bus_A=RW_R6 ]
        [ ALU=A+B bus_A=RW_R5 bus_B=R5 ]
:DIGIT1
        [ ALU=A+B bus_A=RW_R5 bus_B=R5 ]
        [ ALU=A+B bus_A=RW_R5 bus_B=R5 ]
        [ ALU=A+B bus_A=RW_R5 bus_B=R5 ]
        [ ALU=A+B bus_A=RW_R5 bus_B=R1 GOTO ADR=CONSOL2 ]
:DIGIT_IO
        [ ALU=A_BIC_B bus_A=R1 CONST D=7 FLAG=Z ]
        [ GO_FALSE ADR=INVALID_KEY ]
        [ ALU=A+1 bus_A=RW_R6 GOTO ADR=DIGIT1 ]

:MEM_KEY
        [ CONST->Time D=0 ]
        [ CONST->R3 D=1 ]
        [ CALL ADR=CRLF ]
        [ GOTO ADR=CONSOL_LOOP ]
:IO_KEY
        [ CONST->Time D=2 ]
        [ CONST->R3 D=0 ]
        [ CALL ADR=CRLF ]
        [ GOTO ADR=CONSOL_LOOP ]

:CRLF   [ bus_A=R1->STACK CONST->R1 D=0D ]
        [ CALL ADR=PUT_CH REG_EN ]
        [ CONST->R1 D=0A CALL_REG ]
        [ bus_A=STACK->R1 RETURN ]

:PUT_NUM
        [ bus_A=R3->STACK ]
        [ ALU=B-A bus_A=R2 CONST->R3 D=9 ]
:PUT_NM1[ ALU=A-1 bus_A=RW_R3 FLAG=Z ]
        [ ALU=ROL(A) bus_A=RW_R1 ]
        [ ALU=ROL(A) bus_A=RW_R1 ]
        [ ALU=ROL(A) bus_A=RW_R1 ]
        [ ALU=ROL(A) bus_A=RW_R1 GO_FALSE ADR=PUT_NM1 ]
:PUT_NM3[ ALU=A_AND_B bus_A=R1 CONST->R3 D=0F ]
        [ bus_A=R1->STACK ]
        [ ALU=A+B bus_A=R3 CONST->R1 D=30 ]
        [ ALU=A-B bus_A=R1 CONST D=3A FLAG=CARRY ]
        [ GO_FALSE ADR=PUT_NM2 ]
        [ ALU=A+B bus_A=RW_R1 CONST D=7 ]
:PUT_NM2[ CALL ADR=PUT_CH REG_EN ]
        [ bus_A=STACK->R1 ]
        [ ALU=A-1 bus_A=RW_R2 FLAG=Z ]
        [ ALU=ROL(A) bus_A=RW_R1 ]
        [ ALU=ROL(A) bus_A=RW_R1 ]
        [ ALU=ROL(A) bus_A=RW_R1 ]
        [ ALU=ROL(A) bus_A=RW_R1 GO_FALSE ADR=PUT_NM3 ]
        [ bus_A=STACK->R3 RETURN ]

:PUT_NUM_OCT
        [ bus_A=R1->STACK ]
        [ bus_A=R2->STACK ]
        [ bus_A=R3->STACK ]
        [ ALU=ROL(A) bus_A=R1 bus_B=WR_R3 ]
        [ bus_B=RW_R3 SHIFT_EN ]
        [ bus_B=RW_R3 SHIFT_EN ]
        [ ALU=A_BIC_B bus_A=RW_R3 CONST D=6 ]
        [ CONST->R2 D=6 ]
:PUT_NUM_O1
        [ ALU=A_AND_B bus_A=R3 CONST->R1 D=7 ]
        [ ALU=A+B bus_A=RW_R1 CONST D=30 ]
        [ CALL ADR=PUT_CH ]
        [ ALU=A-1 bus_A=RW_R2 FLAG=Z ]
        [ ALU=ROL(A) bus_A=RW_R3 ]
        [ ALU=ROL(A) bus_A=RW_R3 ]
        [ ALU=ROL(A) bus_A=RW_R3 GO_FALSE ADR=PUT_NUM_O1 ]
        [ bus_A=STACK->R3 ]
        [ bus_A=STACK->R2 ]
        [ bus_A=STACK->R1 RETURN ]

:GET_CH [ bus_A=Etop->STACK ]
:GET_CH1[ CALL ADR=REFRESH ]
        [ bus_B=M QUIT_ON FLAG=Qbus ]
        [ GO_TRUE ADR=GET_CH2 ]
        [ CONST->Etop D=20 SHIFT_EN ]
        [ bus_B=WR_R1 RD_CONSOL ]
        [ ALU=A_AND_B bus_A=Etop bus_B=R1 FLAG=Z ]
        [ GO_TRUE ADR=GET_CH1 ]
        [ CONST->Etop D=0C SHIFT_EN ]
        [ bus_B=Etop  WR_CONSOL ]
        [ bus_B=WR_R1 RD_CONSOL GOTO ADR=GET_CH3 ]
:GET_CH2[ CONST->Etop D=7F SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=0B8 ]
        [ CALL ADR=GET_IO_ADR ]
        [ bus_B=R1 RD_MEM_A ]
        [ bus_B=WR_R1 RD_MEM_D ]
        [ ALU=A_AND_B bus_A=R1 CONST D=80 FLAG=Z ]
        [ GO_TRUE ADR=GET_CH1 ]
        [ CONST->Etop D=7F SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=0B9 ]
        [ CALL ADR=GET_IO_ADR ]
        [ bus_B=R1 RD_MEM_A ]
        [ bus_B=WR_R1 RD_MEM_D ]
:GET_CH3[ ALU=A_AND_B bus_A=RW_R1 CONST D=7F FLAG=Z ]
        [ GO_TRUE ADR=GET_CH1 ]
        [ bus_A=STACK->Etop GOTO ADR=PUT_CH ]

:CHECK_HALT
        [ CONST->R1 D=20 SHIFT_EN ]
        [ bus_B=WR_R2 RD_CONSOL ]
        [ ALU=A_AND_B bus_A=R1 bus_B=R2 FLAG=Z ]
        [ RETURN_TRUE CONST->R1 D=0C SHIFT_EN ]
        [ bus_B=R1  WR_CONSOL ]
        [ bus_B=WR_R1 RD_CONSOL ]
        [ ALU=A_AND_B bus_A=RW_R1 CONST D=7F ]
        [ ALU=A-B bus_A=R1 CONST D=3 FLAG=Z ]
        [ RETURN_FALSE CONST->R4 D=0 ]
        [ GOTO ADR=HALTED ]

:PUT_CH [ bus_A=Etop->STACK ]
        [ ALU=A_AND_B bus_A=RW_R1 CONST D=0FF ]
        [ bus_A=R1->STACK ]
        [ bus_A=R2->STACK ]
:PUT_CH1[ CALL ADR=REFRESH ]
        [ bus_B=M QUIT_ON FLAG=Qbus ]
        [ GO_TRUE ADR=PUT_CH2 ]
        [ CONST->R2 D=10 SHIFT_EN ]
        [ bus_B=WR_Etop RD_CONSOL ]
        [ ALU=A_AND_B bus_A=R2 bus_B=Etop FLAG=Z ]
        [ GO_TRUE ADR=PUT_CH1 ]
        [ bus_B=R1 WR_CONSOL ]
        [ bus_A=STACK->R2 ]
        [ bus_A=STACK->R1 ]
        [ bus_A=STACK->Etop RETURN ]
:PUT_CH2[ CONST->Etop D=7F SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=0BA ]
        [ CALL ADR=GET_IO_ADR ]
        [ bus_B=R1 RD_MEM_A ]
        [ bus_B=WR_R1 RD_MEM_D ]
        [ ALU=A_AND_B bus_A=R1 CONST D=80 FLAG=Z ]
        [ GO_TRUE ADR=PUT_CH1 ]
        [ CONST->Etop D=7F SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=0BB ]
        [ CALL ADR=GET_IO_ADR ]
        [ ALU=A bus_A=R1 bus_B=WR_Etop ]
        [ bus_A=STACK->R2 ]
        [ bus_A=STACK->R1 bus_B=Etop WR_MEM_A ]
        [ bus_A=STACK->Etop bus_B=R1 WR_MEM_D RETURN ]

:REFRESH
        [ bus_A=R2->STACK FLAG=REF256 ]
        [ CONST->R2 D=80 ]
        [ GO_FALSE ADR=REF_1 ]
        [ ALU=ROL(A) bus_A=RW_R2 ]
:REF_1  [ ALU=A-1 bus_A=RW_R2 FLAG=Z RD_MEM_A ]
        [ RD_MEM_D GO_FALSE ADR=REF_1 ]
        [ bus_B=M RESET_TIMER ]
        [ bus_A=STACK->R2 FLAG=ZERO RETURN ]

:GO_KEY [ ALU=A bus_A=R6 FLAG=Z ]
        [ GO_TRUE ADR=GO_KEY1 ]
        [ ALU=A bus_A=R5 bus_B=WR_P GOTO ADR=GO_KEY2 ]
:GO_KEY1[ CONST D=1  RD_MEM_A ]
        [ bus_B=WR_P RD_MEM_D ]
:GO_KEY2[ CALL ADR=RESTORE_REGS ]
        [ FLAG=ZERO FINISH ]

:AUTORUN
        [ CONST->R2 D=4F SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_R2 CONST D=0F8 ]
        [ bus_B=RW_R2 SHIFT_EN RD_MEM_A ]
        [ bus_B=WR_R1 RD_MEM_D ]
        [ ALU=A bus_A=R1 FLAG=Z ]
        [ GO_TRUE ADR=BOOTER ]
        [ bus_B=P RD_MEM_A ]
        [ bus_B=WR_R1 RD_MEM_D ]
        [ bus_B=R1 WR_MEM_A ]
        [ bus_B=R2 WR_MEM_D GOTO ADR=GO_KEY2 ]

:BOOTER
        % R1 = 0 autorun
        [ bus_A=R1->STACK ]
        [ CONST->Etop D=0F SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=3D ]
        [ CALL ADR=GET_IO_ADR ]
        [ CONST->Etop D=0F SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=3C ]
        [ ALU=A bus_A=R1 bus_B=WR_R2 CALL ADR=GET_IO_ADR ]
        [ CONST->R5 D=1 ]
        [ CONST->R6 D=0 ]
        [ CONST->G  D=0 ]
        [ CONST->R3 D=40 SHIFT_EN ]
        [ WR_MEM_A bus_B=R1 ]
        [ WR_MEM_D bus_B=R3 FLAG=Elorg ]
        [ GO_TRUE ADR=RD_SECTOR_MF ]

:RD_SECTOR_DX
% R5 - sector, R6 - treak, R1 - CSR, R2 - DTR, G - memory adr
        [ CALL ADR=WAIT_DX ][ WR_MEM_A bus_B=R1 ][ WR_MEM_D CONST D=7 ]
        [ CALL ADR=WAIT_DX ][ WR_MEM_A bus_B=R2 ][ WR_MEM_D bus_B=R5 ]
        [ CALL ADR=WAIT_DX ][ WR_MEM_A bus_B=R2 ][ WR_MEM_D bus_B=R6 ]
        [ CALL ADR=WAIT_DX ][ RD_MEM_A bus_B=R1 ][ RD_MEM_D bus_B=WR_R3 ]
        [ CONST->R4 D=80 SHIFT_EN ]
        [ ALU=A_AND_B bus_A=R4 bus_B=R3 FLAG=Z ]
        [ GO_FALSE ADR=BOOT_ERR_DX ]
        [ bus_A=R5->STACK ]
        [ bus_A=R6->STACK ]
        [ WR_MEM_A bus_B=R1 ][ WR_MEM_D CONST D=3 ]
        [ CONST->L D=32. ]
:RD_BUF_DX
        [ CALL ADR=WAIT_DX ][ RD_MEM_A bus_B=R2 ][ RD_MEM_D bus_B=WR_R3 ]
        [ ALU=A_AND_B bus_A=RW_R3 CONST D=0FF ]
        [ CALL ADR=WAIT1_DX ][ RD_MEM_A bus_B=R2 ][ RD_MEM_D bus_B=WR_R4 ]
        [ ALU=A_AND_B bus_A=RW_R4 CONST D=0FF ]
        [ CALL ADR=WAIT1_DX ][ RD_MEM_A bus_B=R2 ][ RD_MEM_D bus_B=WR_R5 ]
        [ ALU=A_AND_B bus_A=RW_R5 CONST D=0FF ]
        [ CALL ADR=WAIT1_DX ][ RD_MEM_A bus_B=R2 ][ RD_MEM_D bus_B=WR_R6 ]
        [ ALU=A_AND_B bus_A=RW_R6 CONST D=0FF ]
        [ bus_B=RW_R6 SHIFT_EN ][ ALU=A_OR_B bus_A=RW_R6 bus_B=R5 ]
        [ bus_B=RW_R6 SHIFT_EN ][ ALU=A_OR_B bus_A=RW_R6 bus_B=R4 ]
        [ bus_B=RW_R6 SHIFT_EN ][ ALU=A_OR_B bus_A=RW_R6 bus_B=R3 ]
        [ WR_MEM_A bus_B=G ]
        [ WR_MEM_D bus_B=R6 ]
        [ ALU=A+1 bus_A=RW_G ]
        [ ALU=A-1 bus_A=RW_L FLAG=Z ]
        [ GO_FALSE ADR=RD_BUF_DX ]

        [ bus_A=STACK->R6 ]
        [ bus_A=STACK->R5 ]
        [ ALU=A+1 bus_A=RW_R5 ]
        [ ALU=A-B bus_A=R5 CONST D=27. FLAG=Z ]
        [ GO_FALSE ADR=DX_1 ]
        [ ALU=A+1 bus_A=RW_R6 ]
        [ CONST->R5 D=1 ]
:DX_1   [ CONST->R3 D=04 SHIFT_EN ]
        [ ALU=A-B bus_A=G bus_B=R3 FLAG=CARRY ]
        [ GO_FALSE ADR=RD_SECTOR_DX ]
        [ GOTO ADR=BOOTER2 ]

:RD_SECTOR_MF
% R5 - sector, R6 - track, R1 - CSR, R2 - DTR, G - memory adr
        [ CONST->R4 D=1 SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_R4 CONST D=7 ]
        [ CALL ADR=WAIT_DX ][ WR_MEM_A bus_B=R1 ][ WR_MEM_D bus_B=R4 ]
        [ CALL ADR=WAIT_DX ][ WR_MEM_A bus_B=R2 ][ WR_MEM_D bus_B=R5 ]
        [ CALL ADR=WAIT_DX ][ WR_MEM_A bus_B=R2 ][ WR_MEM_D bus_B=R6 ]
        [ CALL ADR=WAIT_DX ][ RD_MEM_A bus_B=R1 ][ RD_MEM_D bus_B=WR_R3 ]
        [ CONST->R4 D=80 SHIFT_EN ]
        [ ALU=A_AND_B bus_A=R4 bus_B=R3 FLAG=Z ]
        [ GO_FALSE ADR=BOOT_ERR_DX ]
        [ CONST->R4 D=1 SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_R4 CONST D=3 ]
        [ WR_MEM_A bus_B=R1 ][ WR_MEM_D bus_B=R4 ]
        [ CALL ADR=WAIT_DX ][ WR_MEM_A bus_B=R2 ][ WR_MEM_D CONST D=80 ]
        [ CALL ADR=WAIT_DX ][ WR_MEM_A bus_B=R2 ][ WR_MEM_D CONST D=00 ]
        [ CALL ADR=WAIT_DX ][ RD_MEM_A bus_B=R1 ][ RD_MEM_D bus_B=WR_R3 ]
        [ CONST->R4 D=80 SHIFT_EN ]
        [ ALU=A_AND_B bus_A=R4 bus_B=R3 FLAG=Z ]
        [ GO_FALSE ADR=BOOT_ERR_DX ]
        [ CONST->L  D=40 SHIFT_EN ]
        [ bus_B=RW_L     SHIFT_EN ]
        [ CONST->R4 D=64. ]
:RD_BUF_MF
        [ bus_B=L RD_MEM_A ]
        [ bus_B=WR_R3 RD_MEM_D ]
        [ bus_B=G WR_MEM_A ]
        [ bus_B=R3 WR_MEM_D ]
        [ ALU=A-1 bus_A=RW_R4 FLAG=Z ]
        [ ALU=A+1 bus_A=RW_G ]
        [ ALU=A+1 bus_A=RW_L GO_FALSE ADR=RD_BUF_MF ]

        [ ALU=A+1 bus_A=RW_R5 ]
        [ ALU=A-B bus_A=R5 CONST D=27. FLAG=Z ]
        [ GO_FALSE ADR=MF_1 ]
        [ ALU=A+1 bus_A=RW_R6 ]
        [ CONST->R5 D=1 ]
:MF_1   [ CONST->R3 D=04 SHIFT_EN ]
        [ ALU=A-B bus_A=G bus_B=R3 FLAG=CARRY ]
        [ GO_FALSE ADR=RD_SECTOR_MF ]
:BOOTER2[ bus_A=STACK->R1 ALU=A FLAG=Z ]
        [ GO_FALSE ADR=CONSOL9 ]
        [ ALU=A-B bus_A=RW_R6 bus_B=R6 GOTO ADR=GO_KEY ]

:BOOT_ERR_DX
        [ bus_A=STACK->R1 ]
        [ ALU=A bus_A=R1 FLAG=Z ]
        [ GO_TRUE ADR=BOOTER_MW ]
        [ bus_A=R1->STACK ]

:BOOT_ERR
        [ CALL ADR=CRLF ]
        [ CONST->R1 D=45 CALL_REG ]
        [ CONST->R1 D=52 CALL_REG ]
        [ CONST->R1 D=52 CALL_REG ]
        [ CONST->R1 D=4F CALL_REG ]
        [ CONST->R1 D=52 CALL_REG ]
        [ CONST->Time D=0 ]
        [ bus_A=STACK->R1 GOTO ADR=CONSOL9 ]

:WAIT_DX
        [ CALL ADR=REFRESH ]
:WAIT1_DX
        [ RD_MEM_A bus_B=R1 ]
        [ RD_MEM_D bus_B=WR_Etop ]
        [ ALU=A_AND_B bus_A=Etop CONST D=0A0 FLAG=Z ]
        [ GO_TRUE ADR=WAIT_DX ]
        [ RETURN ]

:WAIT_MW
        [ CALL ADR=REFRESH ]
        [ CONST->Etop D=0F SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=90 ]
        [ CALL ADR=GET_IO_ADR ]
        [ bus_B=R1    RD_MEM_A ]
        [ bus_B=WR_R1 RD_MEM_D ]
        [ ALU=A_AND_B bus_A=R1 CONST D=80 FLAG=Z ]
        [ GO_TRUE ADR=WAIT_MW ]
        [ RETURN ]

:BOOTER_MW
        [ bus_A=R1->STACK FLAG=Elorg ]
        [ GO_TRUE ADR=READ_MW ]
:READ_DP[ CONST->Etop D=0E SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=0E6 ]
        [ CALL ADR=GET_IO_ADR ]
        [ bus_B=R1 WR_MEM_A ]
        [ CONST D=1 WR_MEM_D ]
        [ CALL ADR=REFRESH ]
        [ CONST->Etop D=0E SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=0E7 ]
        [ CALL ADR=GET_IO_ADR ]
        [ CONST->R2 D=0F8 SHIFT_EN ]
        [ bus_B=R1 WR_MEM_A ]
        [ bus_B=R2 WR_MEM_D ]
        [ CONST->Etop D=0E SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=0E6 ]
        [ CALL ADR=GET_IO_ADR ]
        [ bus_B=R1 WR_MEM_A ]
        [ CONST D=5 WR_MEM_D ]
:WAIT_DP
        [ CALL ADR=REFRESH ]
        [ bus_B=R1 RD_MEM_A ]
        [ bus_B=WR_R2 RD_MEM_D ]
        [ ALU=A_AND_B bus_A=R2 CONST D=80 FLAG=Z ]
        [ GO_TRUE ADR=WAIT_DP ]
        [ CONST->R3 D=80 SHIFT_EN ]
        [ ALU=A_AND_B bus_A=R2 bus_B=R3 FLAG=Z ]
        [ GO_FALSE ADR=BOOT_ERR ]
        [ GOTO ADR=RD_Q_BUF ]

:READ_MW[ CONST->Etop D=0F SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=94 ]
        [ CALL ADR=GET_IO_ADR ]
        [ bus_B=R1   WR_MEM_A ]
        [ CONST D=20 WR_MEM_D ]
        [ CALL ADR=WAIT_MW ]
        [ CONST->Etop D=0F SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=91 ]
        [ CALL ADR=GET_IO_ADR ]
        [ CONST->R3 D=0F8 SHIFT_EN ]
        [ bus_B=R1   WR_MEM_A ]
        [ bus_B=R3   WR_MEM_D ]
        [ CONST->Etop D=0F SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=90 ]
        [ CALL ADR=GET_IO_ADR ]
        [ bus_B=R1   WR_MEM_A ]
        [ CONST D=11 WR_MEM_D ]
        [ CALL ADR=WAIT_MW ]
        [ CONST->Etop D=0F SHIFT_EN ]
        [ ALU=A_OR_B bus_A=RW_Etop CONST D=90 ]
        [ CALL ADR=GET_IO_ADR ]
        [ bus_B=R1    RD_MEM_A ]
        [ bus_B=WR_R1 RD_MEM_D ]
        [ CONST->R3 D=80 SHIFT_EN ]
        [ ALU=A_AND_B bus_A=R1 bus_B=R3 FLAG=Z ]
        [ GO_FALSE ADR=BOOT_ERR ]
:RD_Q_BUF
        [ CONST->R3 D=40 SHIFT_EN ]
        [ bus_B=RW_R3    SHIFT_EN ]
        [ CONST->R4 D=0 ]
        [ CONST->R1 D=4  SHIFT_EN ]
:RD_BUF_MW
        [ bus_B=R3    RD_MEM_A ]
        [ bus_B=WR_R5 RD_MEM_D ]
        [ bus_B=R4    WR_MEM_A ]
        [ bus_B=R5    WR_MEM_D ]
        [ ALU=A-1 bus_A=RW_R1 FLAG=Z ]
        [ ALU=A+1 bus_A=RW_R3 ]
        [ ALU=A+1 bus_A=RW_R4 GO_FALSE ADR=RD_BUF_MW ]
        [ GOTO ADR=BOOTER2 ]

:INIT_STACK
% Init expression stack
        [ CONST->R1 D=32. ]
:INIT_ST[ ALU=A-1 bus_A=RW_R1 FLAG=Z ]
        [ bus_A=Etop->STACK GO_FALSE ADR=INIT_ST ]
:INIT_ST1
        [ bus_A=STACK->Etop ]
        [ FLAG=STK_EMPTY GO_IF_NOT_REQUEST ADR=INIT_ST1 ]
        [ RETURN ]
