IMPLEMENTATION MODULE pedTools; (*  18-Apr-91. (c) KRONOS *)FROM SYSTEM      IMPORT ADR;IMPORT  mem : libHeap;IMPORT  err : libCrash;IMPORT  wnd : libWindows;IMPORT  bio : libBIO;IMPORT  men : cdsMenu;IMPORT  vg  : cdsGrafic;WITH STORAGE : mem;CONST tool_file='tool.box';VAR  tool_menu: wnd.window;PROCEDURE read_tool_box;  VAR f: bio.FILE; t: err.trap; n: INTEGER;BEGIN  IF err.enter(t) THEN    men.message(-10000,-10000,1,4,'%s',t.txt); RETURN;  END;  bio.open(f,tool_file,'r');  n:=bio.eof(f) DIV BYTES(tool_rec);  IF n<0 THEN n:=0 END;  RESIZE(tool_box,n);  bio.read(f,ADR(tool_box),BYTES(tool_box));  bio.close(f);  err.exit(t);END read_tool_box;PROCEDURE write_tool_box;  VAR f: bio.FILE; t: err.trap;BEGIN  IF err.enter(t) THEN    men.message(-10000,-10000,1,4,'%s',t.txt); RETURN;  END;  bio.create(f,tool_file,'w',1);  bio.write(f,ADR(tool_box),BYTES(tool_box));  bio.close(f);  err.exit(t);END write_tool_box;PROCEDURE tool_menu_job(w: wnd.window; x,y: INTEGER; ch: CHAR);BEGINEND tool_menu_job;PROCEDURE open_tool_menu;  VAR    sx,sy: INTEGER;    w    : wnd.window;    t    : vg.tool;    trap : err.trap;BEGIN  IF err.enter(trap) THEN    men.message(-10000,-10000,1,4,'%s',trap.txt); RETURN;  END;  t.im:=vg.off; t.prop:=FALSE;  t.W:=0; t.S:=0; t.E:=sx-1; t.N:=sy-1;  t.md:=vg.rep; t.patt:={0..31};  err.exit(trap);END open_tool_menu;BEGIN  NEW(tool_box);  tool_menu:=NIL;END pedTools.